// <auto-generated />
using System;
using GetYoBike.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GetYoBike.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230504151426_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("GetYoBike.Server.Models.Bike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("TypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Bikes");
                });

            modelBuilder.Entity("GetYoBike.Server.Models.BikeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BikeTypes");
                });

            modelBuilder.Entity("GetYoBike.Server.Models.Rent", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BikeID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CardCVC")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CardExpMonth")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CardExpYear")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CardNr")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RentHoursDuration")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RentStartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("UserID", "BikeID");

                    b.HasIndex("BikeID");

                    b.ToTable("Rents");
                });

            modelBuilder.Entity("GetYoBike.Server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "test@email",
                            FirstName = "test1L",
                            LastName = "test1F"
                        });
                });

            modelBuilder.Entity("GetYoBike.Server.Models.Bike", b =>
                {
                    b.HasOne("GetYoBike.Server.Models.BikeType", "Type")
                        .WithMany("Bikes")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("GetYoBike.Server.Models.Rent", b =>
                {
                    b.HasOne("GetYoBike.Server.Models.Bike", "RentedBike")
                        .WithMany("Rents")
                        .HasForeignKey("BikeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GetYoBike.Server.Models.User", "RenterUser")
                        .WithMany("Rents")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RentedBike");

                    b.Navigation("RenterUser");
                });

            modelBuilder.Entity("GetYoBike.Server.Models.Bike", b =>
                {
                    b.Navigation("Rents");
                });

            modelBuilder.Entity("GetYoBike.Server.Models.BikeType", b =>
                {
                    b.Navigation("Bikes");
                });

            modelBuilder.Entity("GetYoBike.Server.Models.User", b =>
                {
                    b.Navigation("Rents");
                });
#pragma warning restore 612, 618
        }
    }
}
