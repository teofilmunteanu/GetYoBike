@page "/rents"

@using GetYoBike.Shared.Models;
@using System.Text.Json;
@using System.Net;
@inject IJSRuntime JsRuntime
@inject HttpClient Http
@inject NavigationManager NavManager


<header>
    <b>Your Rents</b>
    <span></span>
    <span></span>
    <div>
        <button class="edit-button">Edit rent</button>&nbsp;<input type="number" placeholder="Enter Rent PIN">
    </div>
</header>

<div class="wraper">
    @foreach (var rent in RentsList)
    {
        <div class="card">
            <div>
                <img src="/assets/buildings.png"> 
            </div>
            <div class="card-info">

                <div>Rent Start Date</div>
                <div>@rent.StartDate.ToShortDateString()</div>
            </div>
            <div class="card-info">

                <div>Duration</div>
                <div>@rent.EndDate</div>
            </div>
            <div class="card-info">

                <div>Price</div>
                <div>@rent.Price</div>
            </div>
            <div>
                <button @onclick="() => Check_PIN_and_Send(rent.Id, rent.EditPIN)" class="edit-button">Edit</button>
            </div>
            <div>
                <input type="number" placeholder="Enter Rent PIN" @bind="InputEditPIN">
            </div>
        </div>
    }
    

</div>

@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "email")]
    public string Email { get; set; } = "";

    public List<RentModel>? RentsList { get; set; } = new List<RentModel>();

    public string InputEditPIN { get; set; } = "";


    protected override async Task OnInitializedAsync()
    {
        string message = "";

        //Example of using the response code, instead of try-catch
        var response = await Http.GetAsync("api/Users/FindUserByEmail/" + Email);
        if (response.IsSuccessStatusCode)
        {
            var responseContent = response.Content.ReadAsStringAsync().Result;
            UserModel? user = JsonSerializer.Deserialize<UserModel>(responseContent, new JsonSerializerOptions
                {
                    PropertyNameCaseInsensitive = true
                });

            if (user != null)
            {
                //Example of using try-catch
                try
                {
                    RentsList = await Http.GetFromJsonAsync<List<RentModel>>("api/Rents/GetRentsOfUser/" + user.Id);
                }
                catch(HttpRequestException e)
                {
                    if(e.StatusCode == HttpStatusCode.NotFound)
                    {
                        message = "No rents found";
                    }
                    else
                    {
                        message = e.Message;
                    }
                }
            }
        }
        else if(response.StatusCode == HttpStatusCode.NotFound)
        {
            message = "No user found";
        }
        else
        {
            message = response.Content.ReadAsStringAsync().Result;
        }

        if (message != "")
        {
            await JsRuntime.InvokeVoidAsync("alert", message);
        }
    }

    public async Task Check_PIN_and_Send(int rentId, string EditPIN)
    {
        if (EditPIN == InputEditPIN)
        {
            NavManager.NavigateTo($"/edit?email={Email}&rentId={rentId}");
        }
        else
        {
            await JsRuntime.InvokeVoidAsync("alert", "Incorrect PIN");
        }
    }
}
