@page "/edit/{RentId:int}"

@inject IJSRuntime JsRuntime
@using GetYoBike.Shared.Models;
@inject NavigationManager NavManager
@inject HttpClient Http
@inject Services.RentService RentSvc

@*check if edit pin was inserted*@
<Header Title="Edit Rent Details" />

<div class="grid-container">

    <div class="left-top">

        <form action="" method="post" id="formContainer">
            <div class="username">
                <div class="email-grid">
                    <label for="email" class="formLabel">Email</label>
                    <br />
                    <input type="email" name="email" id="email" class="email" @bind="Email">
                </div>
                <br/>
                <div class="dateStart-grid">
                    <label for="rent" class="formLabel">Start Date</label>
                    <br />
                    <input type="date" name="StartDate" class="rentDate"
                           @bind="RentStartDate" @bind:after="SetDatesAndPrice" />
                </div>
                <div class="timeStart-grid">
                    <label for="duration" class="formLabel">Start Time</label>
                    <br />
                    <input type="time" name="StartTime" class="rentTime" placeholder="hh"
                           @bind="RentStartTime" @bind:after="SetDatesAndPrice">
                </div>
                <div class="dateEnd-grid">
                    <label for="rent" class="formLabel">End Date</label>
                    <br />
                    <input type="date" name="EndDate" class="rentDate"
                           @bind="RentEndDate" @bind:after="SetDatesAndPrice" />
                </div>
                <div class="timeEnd-grid">
                    <label for="duration" class="formLabel">End Time</label>
                    <br />
                    <input type="time" name="EndTime" class="rentTime" placeholder="hh"
                           @bind="RentEndTime" @bind:after="SetDatesAndPrice">
                </div>

                <br />
            </div>
        </form>
    </div>

    <div class="right">
        <div class="type">
            <span>Bike Type</span>
        </div>

        <div class="wrapper">
            <div class="tabs">
                <div class="tab">
                    <input type="radio" name="css-tabs" id="tab-1" class="tab-switch" checked="@(BikeTypeNr == 1)" @onchange="@(() => BikeTypeNr = 1)">
                    <label for="tab-1" class="tab-label"><img src="assets/buildings.png" class="img-tab"></label>
                    <div class="tab-content"><img src="assets/rentCityBike.png" class="img-div"></div>
                </div>
                <div class="tab">
                    <input type="radio" name="css-tabs" id="tab-2" class="tab-switch" checked="@(BikeTypeNr == 2)" @onchange="@(() => BikeTypeNr = 2)">
                    <label for="tab-2" class="tab-label"><img src="assets/mountain.png" class="img-tab"></label>
                    <div class="tab-content"><img src="assets/rentMountainBike.png" class="img-div"></div>
                </div>

            </div>
        </div>

    </div>

    <div class="left-bottom">
        <div class="flex-contianer">
            <button class="button" style="vertical-align:middle">
                <span>Cancel Rent</span>
            </button>
            <div class="total">
                <span>Total: 65 lei</span>
            </div>
            <button class="buttonc" style="vertical-align:middle">
                <span>Confirm Changes</span>
            </button>
        </div>
    </div>
</div>
@code {
    [Parameter]
    public int RentId { get; set; }

    public decimal Price { get; set; }
    public int BikeTypeNr { get; set; }

    public string Email { get; set; } = "";

    public DateOnly RentStartDate { get; set; }
    public DateOnly RentEndDate { get; set; }
    public TimeOnly RentStartTime { get; set; }
    public TimeOnly RentEndTime { get; set; }

    private decimal pricePerH;
    DateTime dateTimeStart;
    DateTime dateTimeEnd;


    public async void SetType()
    {
        await JsRuntime.InvokeVoidAsync("alert", BikeTypeNr.ToString());
    }

    private void SetDatesAndPrice()
    {
        dateTimeStart = RentStartDate.ToDateTime(new TimeOnly(RentStartTime.Hour, RentStartTime.Minute, 0));
        dateTimeEnd = RentEndDate.ToDateTime(new TimeOnly(RentEndTime.Hour, RentEndTime.Minute, 0));
        RentSvc.SetDuration(dateTimeStart, dateTimeEnd);

        RentSvc.CalculatePrice(RentSvc.DurationHours, pricePerH);
        Price = RentSvc.Price;
    }

    protected override async Task OnInitializedAsync()
    {
        //if the email is changed to one not owned by a user, create a user, otherwise, give this rent to that user
    }

}
