@page "/edit"

@inject IJSRuntime JsRuntime
@using GetYoBike.Shared.Models;
@inject NavigationManager NavManager
@inject HttpClient Http

@*<header>
    <b>Edit Rent Details</b>
</header>*@
<Header Title="Edit Rent Details" />
<div class="grid-container">

    <div class="left-top">

        <form action="" method="post" id="formContainer">
            <div class="username">
                <div class="email-grid">
                    <label for="email" class="formLabel">Email</label>
                    <br />
                    <input type="email" name="email" id="email" class="email" @bind="Email">
                </div>
                <div class="rentstart-grid">
                    <label for="rent" class="formLabel">Rent Start Date</label>
                    <br />
                    <input type="date" id="rent" class="rentstart" @bind="Date" />
                </div>
                <div class="duration-grid">
                    <label for="duration" class="formLabel">Duration</label>
                    <br />
                    <input type="number" name="duration" id="duration" class="duration" placeholder="hh" @bind="Duration">
                </div>

                <br />
            </div>
        </form>
    </div>

    <div class="right">
        <div class="type">
            <span>Bike Type</span>
        </div>

        <div class="wrapper">
            <div class="tabs">
                <div class="tab">
                    <input type="radio" name="css-tabs" id="tab-1" class="tab-switch" checked="@(Type == 1)" @onchange="@(() => Type = 1)">
                    <label for="tab-1" class="tab-label"><img src="assets/buildings.png" class="img-tab"></label>
                    <div class="tab-content"><img src="assets/rentCityBike.png" class="img-div"></div>
                </div>
                <div class="tab">
                    <input type="radio" name="css-tabs" id="tab-2" class="tab-switch" checked="@(Type == 2)" @onchange="@(() => Type = 2)">
                    <label for="tab-2" class="tab-label"><img src="assets/mountain.png" class="img-tab"></label>
                    <div class="tab-content"><img src="assets/rentMountainBike.png" class="img-div"></div>
                </div>

            </div>
        </div>

    </div>

    <div class="left-bottom">
        <div class="flex-contianer">
            <button class="button" style="vertical-align:middle">
                <span>Cancel Rent</span>
            </button>
            <div class="total">
                <span>Total: 65 lei</span>
            </div>
            <button class="buttonc" style="vertical-align:middle">
                <span>Confirm Changes</span>
            </button>
        </div>
    </div>
</div>
@code {

    [Parameter]
    public DateTime RentDate { get; set; } = DateTime.Now;
    public int Duration { get; set; } = 0;
    public string LastName { get; set; } = "";
    public string FirstName { get; set; } = "";
    public string Email { get; set; } = "";
    public DateTime Date { get; set; }
    public int Type { get; set; } = 1;

    public string message = "";

    public async void SetType()
    {
        await JsRuntime.InvokeVoidAsync("alert", Type.ToString());
    }
    //protected override async Task OnInitializedAsync()
    //{
      //  var response = await Http.GetAsync("api/Rents/FindUserByMail/" + Email);
       // if (response.IsSuccessStatusCode)
        //{
    // UserModel user = await Http.GetFromJsonAsync<UserModel>("api/Users/PostRent/" ;
           // rents = await Http.GetFromJsonAsync<List<RentModel>>("api/Rents/GetRentsOfUser/" + user.Id);
       // }
   // }

}
